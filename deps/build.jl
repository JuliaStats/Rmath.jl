using BinaryProvider

# This is where all binaries will get installed
const prefix = Prefix(!isempty(ARGS) ? ARGS[1] : joinpath(@__DIR__,"usr"))

libRmath = LibraryProduct(prefix, String["libRmath-julia"])
products = [
libRmath
]

# Download binaries from hosted location
bin_prefix = "https://github.com/JuliaStats/Rmath-julia/releases/download/v0.2.1"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    BinaryProvider.Linux(:aarch64, :glibc) => ("$bin_prefix/rmath.aarch64-linux-gnu.tar.gz", "0e56d5c5472ef832f76949e863958676c272eeaa2405b3239930e1e0b8d6313d"),
    BinaryProvider.Linux(:armv7l, :glibc) => ("$bin_prefix/rmath.arm-linux-gnueabihf.tar.gz", "3d533f1fd1ad68c8b89e5b9c4ecb980688a2e165d1debb1097c481972eea5a14"),
    BinaryProvider.Linux(:i686, :glibc) => ("$bin_prefix/rmath.i686-linux-gnu.tar.gz", "74f80c2e874620d3d6ab22aef1cb1c14e7e122403edafa6c8202745e942141fb"),
    BinaryProvider.Windows(:i686) => ("$bin_prefix/rmath.i686-w64-mingw32.tar.gz", "608a10e2bfed18122e3beeebc677102189fe15aff17777615273f29f1373b4ca"),
    BinaryProvider.Linux(:powerpc64le, :glibc) => ("$bin_prefix/rmath.powerpc64le-linux-gnu.tar.gz", "a190479f41ae26aa9c864fd8470a8671ab5be0bb21341049f76bc451718f6172"),
    BinaryProvider.MacOS() => ("$bin_prefix/rmath.x86_64-apple-darwin14.tar.gz", "f051edcdc5806d625c77f8781ce430c8f52e6f7de913dfce8dbc7cf550fd7f79"),
    BinaryProvider.Linux(:x86_64, :glibc) => ("$bin_prefix/rmath.x86_64-linux-gnu.tar.gz", "a3c975ea2069cfbb3f4b8287ca37ccdb9a48610f611756c9e339a76b44f625c9"),
    BinaryProvider.Windows(:x86_64) => ("$bin_prefix/rmath.x86_64-w64-mingw32.tar.gz", "e938a73e2dba282bb1724084fa849a48e9b5cc79dc25757d32a4d4dd5bfdff74"),
)

if platform_key() in keys(download_info)
    # First, check to see if we're all satisfied
    if any(!satisfied(p; verbose=true) for p in products)
        # Download and install binaries
        url, tarball_hash = download_info[platform_key()]
        install(url, tarball_hash; prefix=prefix, force=true, verbose=true)
    end

    @write_deps_file libRmath
else
    error("Your platform $(Sys.MACHINE) is not supported by this package!")
end
