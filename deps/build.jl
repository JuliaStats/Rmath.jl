using BinaryProvider

# This is where all binaries will get installed
const prefix = Prefix(!isempty(ARGS) ? ARGS[1] : joinpath(@__DIR__,"usr"))

libRmath = LibraryProduct(prefix, String["libRmath-julia"])
products = [
libRmath
]

# Download binaries from hosted location
bin_prefix = "https://github.com/JuliaStats/Rmath-julia/releases/download/v0.2.1"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    BinaryProvider.Linux(:aarch64, :glibc) => ("$bin_prefix/rmath.aarch64-linux-gnu.tar.gz", "c4560246c329b164e116b66adb83457bcfc3e0d833224005d2c778fb0ed12aba"),
    BinaryProvider.Linux(:armv7l, :glibc) => ("$bin_prefix/rmath.arm-linux-gnueabihf.tar.gz", "f88747cf89e1ce2f9b46976bef8ee29e7def13d15e020aa3f4f27c7d94de52bd"),
    BinaryProvider.Linux(:i686, :glibc) => ("$bin_prefix/rmath.i686-linux-gnu.tar.gz", "1d59c13b2e5fa39c715b2baf4ff284343119be0ea20782efd4029859e7d4a483"),
    BinaryProvider.Windows(:i686) => ("$bin_prefix/rmath.i686-w64-mingw32.tar.gz", "d4ccee8af7e24184184af684e78f445cb6e70f1314e62e73c3b2e31ebd1c6471"),
    BinaryProvider.Linux(:powerpc64le, :glibc) => ("$bin_prefix/rmath.powerpc64le-linux-gnu.tar.gz", "76fb0c8212da5af1df8e9688599edfd03277d5be9bea3bbd03da61de6c9508f7"),
    BinaryProvider.MacOS() => ("$bin_prefix/rmath.x86_64-apple-darwin14.tar.gz", "605c2904d8d7dffd606950ca942212e261de6d54ecd3e6012bc01ba3387a48fb"),
    BinaryProvider.Linux(:x86_64, :glibc) => ("$bin_prefix/rmath.x86_64-linux-gnu.tar.gz", "1ac6449eff659308c97f1a1e7d53f5226cb47ad361c11f05d726c45b758e6258"),
    BinaryProvider.Windows(:x86_64) => ("$bin_prefix/rmath.x86_64-w64-mingw32.tar.gz", "558286141aa4379c8a84a56ea5e11276f130fa1984b6a140b3f9276fb38fc6cd"),
)

if platform_key() in keys(download_info)
    # First, check to see if we're all satisfied
    if any(!satisfied(p; verbose=true) for p in products)
        # Download and install binaries
        url, tarball_hash = download_info[platform_key()]
        install(url, tarball_hash; prefix=prefix, force=true, verbose=true)
    end

    @write_deps_file libRmath
else
    error("Your platform $(Sys.MACHINE) is not supported by this package!")
end
